name: Scene Detector

run-name: "VScDetect - ${{ inputs.ShowName }} @ ${{ inputs.EpLabels }}"

on:
  workflow_dispatch:
    inputs:
      ShowName:
        description: "Anime/Show Name, cleanly formated, see 'VapourCoderZRC_Hash/x01.showList.txt'"
        required: true
        type: string
      EpLabels:
        description: "One or Multiple EpLabel, `+`-separated, S0[0-9]E[0-9][0-9] | EpFull"
        required: true
        type: string
        default: "S01E01"
      CustomEnvs:
        description: "Env Overrides (pipe-separated), x=a|y=2 | minSCLenth=50 | QuickExit=true"
        type: string
        required: false
      CleanWS:
        description: "Clean Workspace with slimhub_actions"
        type: boolean
        default: false
        required: false

env:
  SCDETECT: "true"
  ShowName: ${{ github.event.inputs.ShowName }}
  EpLabels: ${{ github.event.inputs.EpLabels }}
  CustomEnvs: ${{ github.event.inputs.CustomEnvs }}
  VapourCoderZRC_Hash: ${{ secrets.VapourCoderZRC_Hash }}
  RCLONE_CONFIG_HASH: ${{ secrets.RCLONE_CONFIG_HASH }}

jobs:
  scdetect:
    name: "SCDetector"
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'main'
      - name: GitHub Auth
        uses: rokibhasansagar/custom_workflows/git_config@main
        with:
          credential: "yes"
          git_cookies: "no"
        env:
          PAT: ${{ secrets.GH_TOKEN }}
      - name: Clean Workspace with slimhub_actions
        if: github.event.inputs.CleanWS == 'true'
        uses: rokibhasansagar/slimhub_actions@main
        with:
          retain: "docker_buildkit"
      - name: Custom Env Patcher
        if: github.event.inputs.CustomEnvs != ''
        run: |
          # Prepare Custom Env Var Overrides
          if [[ ${CustomEnvs} != '' ]]; then
            for i in $(sed 's/|/\n/g' <<<"${CustomEnvs}"); do
              v=$(awk -F'=' '{print $1}' <<<"${i}")
              w=$(cut -d'=' -f2- <<<"${i}" | sed 's#"##g')
              echo "$v=$w" >>$GITHUB_ENV
            done
          fi
          unset v w 2>/dev/null || true
      - name: Run SCDetect Script
        run: |
          # Execute Script Stealthly
          eval 'set -eo pipefail' 2>/dev/null
          eval 'set +o history' 2>/dev/null
          export latestRevision=$(curl -sL "https://gist.github.com/rokibhasansagar/${VapourCoderZRC_Hash}/" | grep "/LATEST\.txt" | awk -F'/raw/' '{print $2}' | awk -F'/' '{print $1}')
          for sc in x99.scriptPatcher.sh x07.prepareContainer.sh x09.sceneDetector.sh; do
            curl -fsSL "https://gist.github.com/rokibhasansagar/${VapourCoderZRC_Hash}/raw/${latestRevision}/${sc}" -O
          done
          chmod a+x *.sh
          source ./x99.scriptPatcher.sh
          source ./x09.sceneDetector.sh
          eval 'set -o history' 2>/dev/null

