name: SceneDetector v5x

run-name: "ScDetect - ${{ inputs.ShowName }} @ ${{ inputs.EpLabels }}"

on:
  workflow_dispatch:
    inputs:
      ShowName:
        description: "[Anime|Movie|Show] Name, @VapourCoderZ5x_Hash/x01.showList.txt"
        required: true
        type: string
      EpLabels:
        description: "One/Multiple EpLabel, `+`-separated, S0[0-9]E[0-9][0-9] / EpFull"
        required: true
        type: string
        default: "S01E01"
      CustomEnvs:
        description: "Env Overrides (pipe-separated), minSCLenth=36 | Probe=false | SCDebug=true | slimRoot=1 | SafeDockerTag=xxx.xxx"
        type: string
        required: false

env:
  QuickExit: true
  StateZ: "SCD"
  ShowName: ${{ github.event.inputs.ShowName }}
  EpLabels: ${{ github.event.inputs.EpLabels }}
  CustomEnvs: ${{ github.event.inputs.CustomEnvs }}
  VapourScriptAddr: "https://gist.github.com/rokibhasansagar/${{ secrets.VapourCoderZ5x_Hash }}"
  RCLONE_CONFIG_HASH: ${{ secrets.RCLONE_CONFIG_HASH }}
  VapourDockerImage: "fr3akyphantom/xvapoursynth-av1an-rt"

jobs:
  scdetect:
    name: "SCDetector"
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'main'
      - name: GitHub Auth
        uses: rokibhasansagar/custom_workflows/git_config@main
        with:
          credential: "yes"
          git_cookies: "no"
        env:
          PAT: ${{ secrets.GH_TOKEN }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Custom Env Patcher
        if: github.event.inputs.CustomEnvs != ''
        run: |
          # Prepare Custom Env Var Overrides
          if [[ ${CustomEnvs} != '' ]]; then
            for i in $(sed 's/|/\n/g' <<<"${CustomEnvs}"); do
              v=$(awk -F'=' '{print $1}' <<<"${i}")
              w=$(cut -d'=' -f2- <<<"${i}" | sed 's#"##g')
              echo "$v=$w" >>$GITHUB_ENV
            done
          fi
          unset v w 2>/dev/null || true
      - name: Maximize Space at /data
        run: |
          # Execute Script Stealthly
          eval 'set -eo pipefail' 2>/dev/null && eval 'set +o history' 2>/dev/null
          export ROOT_RESERVE_MB=${ROOT_RESERVE_MB:-8192} TEMP_RESERVE_MB=${TEMP_RESERVE_MB:-512} SWAP_SIZE_MB=${SWAP_SIZE_MB:-12288}
          export cleanerAddr="https://gist.github.com/rokibhasansagar/27271d28d0d6fa2d4a8d3b6253ffb5cd"
          export cleanRef=$(git ls-remote -q "${cleanerAddr}" HEAD | awk '{print $1}')
          curl -sL --retry 8 --retry-connrefused "${cleanerAddr}/raw/${cleanRef}/maximize.space.sh" | bash 2>/dev/null
          eval 'set -o history' 2>/dev/null
      - name: Prepare Docker Container
        working-directory: /data
        run: |
          # Execute Script Stealthly
          eval 'set -eo pipefail' 2>/dev/null && eval 'set +o history' 2>/dev/null
          # Get GIST latest Revision number
          export latestRevision=$(git ls-remote -q "${VapourScriptAddr}" HEAD | awk '{print $1}')
          echo -e "latestRevision == ${latestRevision}\n"
          for sc in x07.testContainer.sh x53.dockerPrep.sh; do
            curl -sL --retry 5 --retry-connrefused "${VapourScriptAddr}/raw/${latestRevision}/${sc}" -O
          done
          source /data/x53.dockerPrep.sh || exit 1
          if [[ ${AbortSwitch} == "QuickExit" ]]; then exit 1; fi
          eval 'set -o history' 2>/dev/null
        env:
          jobIdentifier: "scdetector"
      - name: Run SCDetect Script
        working-directory: /data
        run: |
          # Execute Script Stealthly
          eval 'set -eo pipefail' 2>/dev/null && eval 'set +o history' 2>/dev/null
          export latestRevision=$(git ls-remote -q "${VapourScriptAddr}" HEAD | awk '{print $1}')
          echo -e "latestRevision == ${latestRevision}\n"
          for sc in x99.scriptPatcher.sh x09.sceneDetector{,.dscript}.sh x13.filterGen.sh; do
            curl -sL --retry 5 --retry-connrefused "${VapourScriptAddr}/raw/${latestRevision}/${sc}" -O
          done
          source /data/x99.scriptPatcher.sh && rm /data/x99.scriptPatcher.sh
          source /data/x09.sceneDetector.sh || exit 1
          eval 'set -o history' 2>/dev/null

