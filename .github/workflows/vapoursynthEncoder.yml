name: VapourCod3rZ RC

run-name: "${{ inputs.EpLabel }} ${{ inputs.VidRes }} - Q${{ inputs.QScale }}/CPU${{ inputs.EncSpeed }} - ${{ inputs.ShowName }}"

on:
  workflow_dispatch:
    inputs:
      ShowName:
        description: "Anime/Movie/Show Name, see 'VapourCoderZRC_Hash/x01.showList.txt'"
        required: true
        type: string
      EpLabel:
        description: "EpLabel, S0[0-9]E[0-9][0-9] | EpFull"
        required: true
        type: string
        default: "S01E01"
      EncSpeed:
        description: "EncSpeed"
        required: true
        type: choice
        options:
        - "1"
        - "2"
        - "3"
        - "4"
      QScale:
        description: "QScale, 13~48"
        required: true
        type: number
      VidRes:
        description: "VidRes, 480p|854x | 540p|960x | 576p|1024x|1024x576 | 720p|1280x"
        required: true
        type: string
        default: "576p"
      CustomEnvs:
        description: "Env Overrides (pipe-separated), x=a|y=2 | minSCLenth=50 | LiveAction=true | QuickExit=true"
        type: string
        required: false
      ForceRecode:
        description: "ForceRecode Previous Chunks"
        required: true
        type: boolean
        default: false
      MergeOnly:
        description: "Only Merge Previously Encoded File"
        required: false
        type: boolean
        default: false
      CleanWS:
        description: "Clean Uploader WorkSpace w/ slimhub_actions"
        type: boolean
        default: false
        required: false

env:
  VSCODER: "true"
  ShowName: ${{ github.event.inputs.ShowName }}
  EpLabel: ${{ github.event.inputs.EpLabel }}
  EncSpeed: ${{ github.event.inputs.EncSpeed }}
  QScale: ${{ github.event.inputs.QScale }}
  VidRes: ${{ github.event.inputs.VidRes }}
  CustomEnvs: ${{ github.event.inputs.CustomEnvs }}
  ForceRecode: ${{ github.event.inputs.ForceRecode }}
  MergeOnly: ${{ github.event.inputs.MergeOnly }}
  VapourCoderZRC_Hash: ${{ secrets.VapourCoderZRC_Hash }}
  RCLONE_CONFIG_HASH: ${{ secrets.RCLONE_CONFIG_HASH }}

jobs:
  generator:
    name: "Job Matrix Preparation"
    if: github.event.inputs.MergeOnly != 'true'
    runs-on: ubuntu-22.04

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      artchunk: ${{ steps.set-artmatrix.outputs.artchunk }}
      artmatrix: ${{ steps.set-artmatrix.outputs.artmatrix }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'main'
      - name: GitHub Auth
        uses: rokibhasansagar/custom_workflows/git_config@main
        env:
          PAT: ${{ secrets.GH_TOKEN }}
      - name: Custom Env Patcher
        if: github.event.inputs.CustomEnvs != ''
        run: |
          # Prepare Custom Env Var Overrides
          if [[ ${CustomEnvs} != '' ]]; then
            for i in $(sed 's/|/\n/g' <<<"${CustomEnvs}"); do
              v=$(awk -F'=' '{print $1}' <<<"${i}")
              w=$(cut -d'=' -f2- <<<"${i}" | sed 's#"##g')
              echo "$v=$w" >>$GITHUB_ENV
            done
          fi
          unset v w 2>/dev/null || true
      - name: Create EncMatrix
        id: set-matrix
        run: |
          # Execute Script Stealthly
          eval 'set -eo pipefail' 2>/dev/null
          eval 'set +o history' 2>/dev/null
          # Get GIST latest Revision number
          export latestRevision=$(curl -sL "https://gist.github.com/rokibhasansagar/${VapourCoderZRC_Hash}/" | grep "/LATEST\.txt" | awk -F'/raw/' '{print $2}' | awk -F'/' '{print $1}')
          # Get Workflow Matrix Script w/ Conditional Script Patcher
          for sc in x99.scriptPatcher.sh x21.matrixGen.sh; do
            curl -fsSL "https://gist.github.com/rokibhasansagar/${VapourCoderZRC_Hash}/raw/${latestRevision}/${sc}" -O
          done
          chmod a+x *.sh
          source ./x99.scriptPatcher.sh && rm ./x99.scriptPatcher.sh
          # Generate Workflow Matrix
          source ./x21.matrixGen.sh
          eval 'set -o history' 2>/dev/null
      - name: Get artchunk and artmatrix
        id: set-artmatrix
        run: |
          # Execute Script Stealthly
          eval 'set -eo pipefail' 2>/dev/null
          eval 'set +o history' 2>/dev/null
          # Get GIST latest Revision number
          export latestRevision=$(curl -sL "https://gist.github.com/rokibhasansagar/${VapourCoderZRC_Hash}/" | grep "/LATEST\.txt" | awk -F'/raw/' '{print $2}' | awk -F'/' '{print $1}')
          # Get Artifactory Matrix Script w/ Conditional Script Patcher
          for sc in x99.scriptPatcher.sh x33.artGen.sh; do
            curl -fsSL "https://gist.github.com/rokibhasansagar/${VapourCoderZRC_Hash}/raw/${latestRevision}/${sc}" -O
          done
          chmod a+x *.sh
          source ./x99.scriptPatcher.sh && rm ./x99.scriptPatcher.sh
          # Generate Artifactory Matrix
          source ./x33.artGen.sh
          eval 'set -o history' 2>/dev/null

  artuploader:
    name: "Vapour Artifactory"
    if: github.event.inputs.MergeOnly != 'true'
    runs-on: ubuntu-22.04
    needs: generator
    outputs:
      AspectRatio: ${{ steps.set-dar.outputs.AspectRatio }}
    strategy:
      fail-fast: true
      max-parallel: 8
      matrix:
        artnum: ${{fromJson(needs.generator.outputs.artmatrix)}}

    env:
      artnum: ${{ matrix.artnum }}
      artchunk: ${{ needs.generator.outputs.artchunk }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'main'
      - name: GitHub Auth
        uses: rokibhasansagar/custom_workflows/git_config@main
        env:
          PAT: ${{ secrets.GH_TOKEN }}
      - name: Clean Workspace with slimhub_actions
        if: github.event.inputs.CleanWS == 'true'
        continue-on-error: true
        uses: rokibhasansagar/slimhub_actions@main
      - name: Custom Env Patcher
        if: github.event.inputs.CustomEnvs != ''
        run: |
          # Prepare Custom Env Var Overrides
          if [[ ${CustomEnvs} != '' ]]; then
            for i in $(sed 's/|/\n/g' <<<"${CustomEnvs}"); do
              v=$(awk -F'=' '{print $1}' <<<"${i}")
              w=$(cut -d'=' -f2- <<<"${i}" | sed 's#"##g')
              echo "$v=$w" >>$GITHUB_ENV
            done
          fi
          unset v w 2>/dev/null || true
      - name: Download Media and Split into Parts
        id: set-dar
        run: |
          # Execute Script Stealthly
          eval 'set -eo pipefail' 2>/dev/null
          eval 'set +o history' 2>/dev/null
          # Get GIST latest Revision number
          export latestRevision=$(curl -sL "https://gist.github.com/rokibhasansagar/${VapourCoderZRC_Hash}/" | grep "/LATEST\.txt" | awk -F'/raw/' '{print $2}' | awk -F'/' '{print $1}')
          # Get Artifact Spliiter Script w/ Conditional Script Patcher
          for sc in x99.scriptPatcher.sh x37.splitGen.sh; do
            curl -fsSL "https://gist.github.com/rokibhasansagar/${VapourCoderZRC_Hash}/raw/${latestRevision}/${sc}" -O
          done
          chmod a+x *.sh
          source ./x99.scriptPatcher.sh && rm ./x99.scriptPatcher.sh
          # Generate Artifact Splits
          source ./x37.splitGen.sh
          eval 'set -o history' 2>/dev/null
      - name: Upload Source Media as Artifact
        uses: actions/upload-artifact@v3
        continue-on-error: true
        with:
          name: artifact
          path: ~/data/${{env.ShowName}}.${{env.EpLabel}}.SOURCE.mkv.${{env.artnum}}
          retention-days: 5
      - name: Upload Source Media as Artifact
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: ~/data/${{env.ShowName}}.${{env.EpLabel}}.SOURCE.mkv.${{env.artnum}}
          retention-days: 5

  synthesizer:
    name: "Vapour Synthesizer"
    if: github.event.inputs.MergeOnly != 'true' && ( !cancelled() || success() )
    runs-on: ubuntu-22.04
    needs: [generator, artuploader]

    strategy:
      fail-fast: false
      max-parallel: 16
      matrix:
        ChunkID: ${{fromJson(needs.generator.outputs.matrix)}}
    env:
      ChunkID: ${{ matrix.ChunkID }}
      AspectRatio: ${{ needs.artuploader.outputs.AspectRatio }}
      VapourFilterZ_Hash: ${{ secrets.VapourFilterZ_Hash }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'main'
      - name: GitHub Auth
        uses: rokibhasansagar/custom_workflows/git_config@main
        env:
          PAT: ${{ secrets.GH_TOKEN }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Download Source Media from Artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: ~/data/artifact/
      - name: Custom Env Patcher
        if: github.event.inputs.CustomEnvs != ''
        run: |
          # Prepare Custom Env Var Overrides
          if [[ ${CustomEnvs} != '' ]]; then
            for i in $(sed 's/|/\n/g' <<<"${CustomEnvs}"); do
              v=$(awk -F'=' '{print $1}' <<<"${i}")
              w=$(cut -d'=' -f2- <<<"${i}" | sed 's#"##g')
              echo "$v=$w" >>$GITHUB_ENV
            done
          fi
          unset v w 2>/dev/null || true
      - name: VapourCod3r - Chunk ${{env.ChunkID}} from ${{env.ShowName}} ${{env.EpLabel}}
        run: |
          # Execute Script Stealthly
          eval 'set -eo pipefail' 2>/dev/null
          eval 'set +o history' 2>/dev/null
          # Get GIST latest Revision number
          export latestRevision=$(curl -sL "https://gist.github.com/rokibhasansagar/${VapourCoderZRC_Hash}/" | grep "/LATEST\.txt" | awk -F'/raw/' '{print $2}' | awk -F'/' '{print $1}')
          # Get All-in-one VapourCod3r Script w/ Conditional Script Patcher
          for sc in x99.scriptPatcher.sh x07.prepareContainer.sh x69.vapourGen.sh; do
            curl -fsSL "https://gist.github.com/rokibhasansagar/${VapourCoderZRC_Hash}/raw/${latestRevision}/${sc}" -O
          done
          chmod a+x *.sh
          source ./x99.scriptPatcher.sh && rm ./x99.scriptPatcher.sh
          # All-in-one Script for VapourCod3r vapourGen
          source ./x69.vapourGen.sh
          eval 'set -o history' 2>/dev/null
      - name: Upload Av1an Error Log as Artifact
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          path: ~/data/enclog.log
          name: enclog.${{env.ChunkID}}
          if-no-files-found: ignore
          retention-days: 3

  merger:
    name: "Synthesized Video Joiner"
    if: ( github.event.inputs.MergeOnly == 'true' && !cancelled() ) || success()
    runs-on: ubuntu-22.04
    needs: [generator, synthesizer]

    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'main'
      - name: GitHub Auth
        uses: rokibhasansagar/custom_workflows/git_config@main
        env:
          PAT: ${{ secrets.GH_TOKEN }}
      - name: Custom Env Patcher
        if: github.event.inputs.CustomEnvs != ''
        run: |
          # Prepare Custom Env Var Overrides
          if [[ ${CustomEnvs} != '' ]]; then
            for i in $(sed 's/|/\n/g' <<<"${CustomEnvs}"); do
              v=$(awk -F'=' '{print $1}' <<<"${i}")
              w=$(cut -d'=' -f2- <<<"${i}" | sed 's#"##g')
              echo "$v=$w" >>$GITHUB_ENV
            done
          fi
          unset v w 2>/dev/null || true
      - name: Joiner for VapourCod3d ${{env.ShowName}} ${{env.EpLabel}}
        run: |
          # Execute Script Stealthly
          eval 'set -eo pipefail' 2>/dev/null
          eval 'set +o history' 2>/dev/null
          # Get GIST latest Revision number
          export latestRevision=$(curl -sL "https://gist.github.com/rokibhasansagar/${VapourCoderZRC_Hash}/" | grep "/LATEST\.txt" | awk -F'/raw/' '{print $2}' | awk -F'/' '{print $1}')
          # Get VapourCod3r xJoiner Script w/ Conditional Script Patcher
          for sc in x99.scriptPatcher.sh x89.xJoiner.sh; do
            curl -fsSL "https://gist.github.com/rokibhasansagar/${VapourCoderZRC_Hash}/raw/${latestRevision}/${sc}" -O
          done
          chmod a+x *.sh
          source ./x99.scriptPatcher.sh && rm ./x99.scriptPatcher.sh
          # VapourCod3r xJoiner for Final Encoded Video
          source ./x89.xJoiner.sh
          eval 'set -o history' 2>/dev/null
      - name: Upload VapourCod3d Video Stream as Artifact
        if: success()
        uses: actions/upload-artifact@v3
        with:
          path: ~/data/${{env.ShowName}}.${{env.EpLabel}}.*.AV1-fr3aky.mkv   # Match ${FinalEncodedVideo} name
          name: ${{env.ShowName}}.${{env.EpLabel}}.Q${{env.QScale}}.VapourCod3d.Result
          if-no-files-found: warn
          retention-days: 5

